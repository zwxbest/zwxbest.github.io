<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你走吧</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://nizouba.com/"/>
  <updated>2018-09-26T06:43:51.168Z</updated>
  <id>http://nizouba.com/</id>
  
  <author>
    <name>zwxbest</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自创面试题之其他框架</title>
    <link href="http://nizouba.com/2018/09/26/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E5%85%B6%E4%BB%96%E6%A1%86%E6%9E%B6/"/>
    <id>http://nizouba.com/2018/09/26/自创面试题之其他框架/</id>
    <published>2018-09-26T06:36:59.000Z</published>
    <updated>2018-09-26T06:43:51.168Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JobDetail和Job的对应关系，Trigger和JobDetail的对应关系。"><a href="#JobDetail和Job的对应关系，Trigger和JobDetail的对应关系。" class="headerlink" title="JobDetail和Job的对应关系，Trigger和JobDetail的对应关系。"></a>JobDetail和Job的对应关系，Trigger和JobDetail的对应关系。</h3><p>JobDetail接收Job实现类，实例化Job，并配置其他，比如Name等信息，是一对一的关系<br>Trigger和JobDetail是一对多的关系，通过Scheduler相关联。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JobDetail和Job的对应关系，Trigger和JobDetail的对应关系。&quot;&gt;&lt;a href=&quot;#JobDetail和Job的对应关系，Trigger和JobDetail的对应关系。&quot; class=&quot;headerlink&quot; title=&quot;JobDetai
      
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="http://nizouba.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>自创面试题之微信公众号与小程序</title>
    <link href="http://nizouba.com/2018/09/25/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B8%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://nizouba.com/2018/09/25/自创面试题之微信公众号与小程序/</id>
    <published>2018-09-25T11:25:03.000Z</published>
    <updated>2018-09-25T11:26:52.649Z</updated>
    
    <content type="html"><![CDATA[<p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;### &lt;/p&gt;

      
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="http://nizouba.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>自创面试题之Web</title>
    <link href="http://nizouba.com/2018/09/25/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BWeb/"/>
    <id>http://nizouba.com/2018/09/25/自创面试题之Web/</id>
    <published>2018-09-25T09:18:55.000Z</published>
    <updated>2018-09-25T09:24:42.248Z</updated>
    
    <content type="html"><![CDATA[<h3 id="如下url会怎么跳转？"><a href="#如下url会怎么跳转？" class="headerlink" title="如下url会怎么跳转？"></a>如下url会怎么跳转？</h3><pre><code>&lt;img src=&quot;//static-private.gg.com/org-logo/ead33b19-4b39-424a-b517-aa.jpg&quot; alt=&quot;图标&quot;&gt;&lt;img src=&quot;static-private.gg.com/org-logo/ead33b19-4b39-424a-b517-aa.jpg&quot; alt=&quot;图标&quot;&gt;</code></pre><p>第一个会直接跳转到static-private.gg.com/org-logo/ead33b19-4b39-424a-b517-aa.jpg,等同于http:// 。 第二个会在当前域名后加，static-private.gg.com/org-logo/ead33b19-4b39-424a-b517-aa.jpg跳转。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;如下url会怎么跳转？&quot;&gt;&lt;a href=&quot;#如下url会怎么跳转？&quot; class=&quot;headerlink&quot; title=&quot;如下url会怎么跳转？&quot;&gt;&lt;/a&gt;如下url会怎么跳转？&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;img src=&amp;quot;//static
      
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="http://nizouba.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>自创面试题之Java语法</title>
    <link href="http://nizouba.com/2018/09/25/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BJava%E8%AF%AD%E6%B3%95/"/>
    <id>http://nizouba.com/2018/09/25/自创面试题之Java语法/</id>
    <published>2018-09-25T08:02:20.000Z</published>
    <updated>2018-09-25T08:02:49.662Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是Blank-Final"><a href="#什么是Blank-Final" class="headerlink" title="什么是Blank Final"></a>什么是Blank Final</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是Blank-Final&quot;&gt;&lt;a href=&quot;#什么是Blank-Final&quot; class=&quot;headerlink&quot; title=&quot;什么是Blank Final&quot;&gt;&lt;/a&gt;什么是Blank Final&lt;/h3&gt;
      
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="http://nizouba.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>自创面试题之VIM</title>
    <link href="http://nizouba.com/2018/09/25/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BVIM/"/>
    <id>http://nizouba.com/2018/09/25/自创面试题之VIM/</id>
    <published>2018-09-25T02:00:05.000Z</published>
    <updated>2018-09-25T02:10:44.605Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Vim有四种模式？"><a href="#Vim有四种模式？" class="headerlink" title="Vim有四种模式？"></a>Vim有四种模式？</h3><p>4种。</p><ol><li>正常-normal</li><li>插入-insert</li><li>命令-command</li><li>可视-visual<h1 id="vim的外部命令怎么进入"><a href="#vim的外部命令怎么进入" class="headerlink" title="vim的外部命令怎么进入?"></a>vim的外部命令怎么进入?</h1>用:!,比如:!sort,:!dir<h1 id="如何对vim选中的文本查询"><a href="#如何对vim选中的文本查询" class="headerlink" title="如何对vim选中的文本查询?"></a>如何对vim选中的文本查询?</h1>用:%!，比如 :%! grep “redus”</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Vim有四种模式？&quot;&gt;&lt;a href=&quot;#Vim有四种模式？&quot; class=&quot;headerlink&quot; title=&quot;Vim有四种模式？&quot;&gt;&lt;/a&gt;Vim有四种模式？&lt;/h3&gt;&lt;p&gt;4种。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;正常-normal&lt;/li&gt;
&lt;li&gt;插入-ins
      
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="http://nizouba.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>自创面试题之TCP/IP</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BTCP-IP/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之TCP-IP/</id>
    <published>2018-09-23T08:30:28.000Z</published>
    <updated>2018-09-23T10:38:21.235Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是keepalive定时器？"><a href="#什么是keepalive定时器？" class="headerlink" title="什么是keepalive定时器？"></a>什么是keepalive定时器？</h3><p>在一个空闲的（idle）TCP连接上，没有任何的数据流，许多TCP/IP的初学者都对此感到惊奇。也就是说，如果TCP连接两端没有任何一个进程在向对方发送数据，那么在这两个TCP模块之间没有任何的数据交换。你可能在其它的网络协议中发现有轮询（polling），但在TCP中它不存在。言外之意就是我们只要启动一个客户端进程，同服务器建立了TCP连接，不管你离开几小时，几天，几星期或是几个月，连接依旧存在。中间的路由器可能崩溃或者重启，电话线可能go down或者back up，只要连接两端的主机没有重启，连接依旧保持建立。这就可以认为不管是客户端的还是服务器端的应用程序都没有应用程序级（application-level）的定时器来探测连接的不活动状态（inactivity），从而引起任何一个应用程序的终止。然而有的时候，服务器需要知道客户端主机是否已崩溃并且关闭，或者崩溃但重启。许多实现提供了存活定时器来完成这个任务。</p><p>存活定时器是一个包含争议的特征。许多人认为，即使需要这个特征，这种对对方的轮询也应该由应用程序来完成，而不是由TCP中实现。此外，如果两个终端系统之间的某个中间网络上有连接的暂时中断，那么存活选项（option）就能够引起两个进程间一个良好连接的终止。例如，如果正好在某个中间路由器崩溃、重启的时候发送存活探测，TCP就将会认为客户端主机已经崩溃，但事实并非如此。</p><p>存活（keepalive）并不是TCP规范的一部分。在Host Requirements RFC罗列有不使用它的三个理由：（1）在短暂的故障期间，它们可能引起一个良好连接（good connection）被释放（dropped），（2）它们消费了不必要的宽带，（3）在以数据包计费的互联网上它们（额外）花费金钱。然而，在许多的实现中提供了存活定时器。<br>一些服务器应用程序可能代表客户端占用资源，它们需要知道客户端主机是否崩溃。存活定时器可以为这些应用程序提供探测服务。Telnet服务器和Rlogin服务器的许多版本都默认提供存活选项。</p><p>个人计算机用户使用TCP/IP协议通过Telnet登录一台主机，这是能够说明需要使用存活定时器的一个常用例子。如果某个用户在使用结束时只是关掉了电源，而没有注销（log off），那么他就留下了一个半打开（half-open）的连接。如果客户端消失，留给了服务器端半打开的连接，并且服务器又在等待客户端的数据，那么等待将永远持续下去。存活特征的目的就是在服务器端检测这种半打开连接。</p><h3 id="keepalive如何工作？"><a href="#keepalive如何工作？" class="headerlink" title="keepalive如何工作？"></a>keepalive如何工作？</h3><p>在此描述中，我们称使用存活选项的那一段为服务器，另一端为客户端。也可以在客户端设置该选项，且没有不允许这样做的理由，但通常设置在服务器。如果连接两端都需要探测对方是否消失，那么就可以在两端同时设置（比如NFS）。</p><p>若在一个给定连接上，两小时之内无任何活动，服务器便向客户端发送一个探测段。（我们将在下面的例子中看到探测段的样子。）客户端主机必须是下列四种状态之一：</p><p>1) 客户端主机依旧活跃（up）运行，并且从服务器可到达。从客户端TCP的正常响应，服务器知道对方仍然活跃。服务器的TCP为接下来的两小时复位存活定时器，如果在这两个小时到期之前，连接上发生应用程序的通信，则定时器重新为往下的两小时复位，并且接着交换数据。</p><p>2) 客户端已经崩溃，或者已经关闭（down），或者正在重启过程中。在这两种情况下，它的TCP都不会响应。服务器没有收到对其发出探测的响应，并且在75秒之后超时。服务器将总共发送10个这样的探测，每个探测75秒。如果没有收到一个响应，它就认为客户端主机已经关闭并终止连接。</p><p>3) 客户端曾经崩溃，但已经重启。这种情况下，服务器将会收到对其存活探测的响应，但该响应是一个复位，表明客户端的连接非正常关闭，从而引起服务器对连接的终止。</p><p>4) 客户端主机活跃运行，但从服务器不可到达。这与状态2类似，因为TCP无法区别它们两个。它所能表明的仅是未收到对其探测的回复。</p><p>服务器不必担心客户端主机被关闭然后重启的情况（这里指的是操作员执行的正常关闭，而不是主机的崩溃）。当系统被操作员关闭时，所有的应用程序进程（也就是客户端进程）都将被终止，客户端TCP会在连接上发送一个FIN。收到这个FIN后，服务器TCP向服务器进程报告一个文件结束，以允许服务器检测这种状态。</p><p>在第一种状态下，服务器应用程序不知道存活探测是否发生。凡事都是由TCP层处理的，存活探测对应用程序透明，直到后面2，3，4三种状态发生。在这三种状态下，通过服务器的TCP，返回给服务器应用程序错误信息。（通常服务器向网络发出一个读请求，等待客户端的数据。如果存活特征返回一个错误信息，则将该信息作为读操作的返回值返回给服务器。）在状态2，错误信息类似于“连接超时”。状态3则为“连接被对方复位”。第四种状态看起来像连接超时，或者根据是否收到与该连接相关的ICMP错误信息，而可能返回其它的错误信息。</p><h3 id="解释一下TCP-IP中的复位信号"><a href="#解释一下TCP-IP中的复位信号" class="headerlink" title="解释一下TCP-IP中的复位信号"></a>解释一下TCP-IP中的复位信号</h3><p>在TCP协议中RST表示复位，用来异常的关闭连接，在TCP的设计中它是不可或缺的。发送RST包关闭连接时，不必等缓冲区的包都发出去，直接就丢弃缓存区的包发送RST包。而接收端收到RST包后，也不必发送ACK包来确认。</p><h3 id="收到RST复位信号可能有哪些情况？"><a href="#收到RST复位信号可能有哪些情况？" class="headerlink" title="收到RST复位信号可能有哪些情况？"></a>收到RST复位信号可能有哪些情况？</h3><p>可能有4种情况：</p><h4 id="端口未打开"><a href="#端口未打开" class="headerlink" title="端口未打开"></a>端口未打开</h4><p>服务器程序端口未打开而客户端来连接。这种情况是最为常见和好理解的一种了。去telnet一个未打开的TCP的端口可能会出现这种错误。这个和操作系统的实现有关。在某些情况下，操作系统也会完全不理会这些发到未打开端口请求。如向一台WINDOWS7的主机发送一个连接不存在的端口的请求，这台主机就不会回应。</p><h4 id="请求超时"><a href="#请求超时" class="headerlink" title="请求超时"></a>请求超时</h4><p>曾经遇到过这样一个情况:一个客户端连接服务器，connect返回-1并且error=EINPROGRESS。 直接telnet发现网络连接没有问题。ping没有出现丢包。用抓包工具查看，客户端是在收到服务器发出的SYN之后就莫名其妙的发送了RST。<br>有89、27两台主机。主机89向主机27发送了一个SYN，表示希望连接8888端口，主机27回应了主机89一个SYN表示可以连接。但是主机27却很不友好，莫名其妙的发送了一个RST表示我不想连接你了。</p><p>后来经过排查发现，在主机89上的程序在建立了socket之后，用setsockopt的SO_RCVTIMEO选项设置了recv的超时时间为100ms。而我们看上面的抓包结果表示，从主机89发出SYN到接收SYN的时间多达110ms。（从15:01:27.799961到15:01:27.961886， 小数点之后的单位是微秒）。因此主机89上的程序认为接收超时，所以发送了RST拒绝进一步发送数据。</p><h4 id="提前关闭"><a href="#提前关闭" class="headerlink" title="提前关闭"></a>提前关闭</h4><p>关于TCP，我想我们在教科书里都读到过一句话，’TCP是一种可靠的连接’。 而这可靠有这样一种含义，那就是操作系统接收到的来自TCP连接中的每一个字节，我都会让应用程序接收到。如果应用程序不接收怎么办？你猜对了，RST。</p><h4 id="在一个已关闭的socket上收到数据"><a href="#在一个已关闭的socket上收到数据" class="headerlink" title="在一个已关闭的socket上收到数据"></a>在一个已关闭的socket上收到数据</h4><p>在一个已关闭的socket上收到数据</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是keepalive定时器？&quot;&gt;&lt;a href=&quot;#什么是keepalive定时器？&quot; class=&quot;headerlink&quot; title=&quot;什么是keepalive定时器？&quot;&gt;&lt;/a&gt;什么是keepalive定时器？&lt;/h3&gt;&lt;p&gt;在一个空闲的（idle）TC
      
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="http://nizouba.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>自创面试题之设计模式</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之设计模式/</id>
    <published>2018-09-23T08:10:37.000Z</published>
    <updated>2018-09-23T10:41:08.091Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之软件工程与架构</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E6%9E%B6%E6%9E%84/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之软件工程与架构/</id>
    <published>2018-09-23T08:10:31.000Z</published>
    <updated>2018-09-23T10:41:07.890Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之Git</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BGit/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之Git/</id>
    <published>2018-09-23T08:10:04.000Z</published>
    <updated>2018-09-23T10:41:07.999Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之ES</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BES/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之ES/</id>
    <published>2018-09-23T08:09:44.000Z</published>
    <updated>2018-09-23T10:41:07.857Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之ZK</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BZK/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之ZK/</id>
    <published>2018-09-23T08:09:40.000Z</published>
    <updated>2018-09-23T10:41:08.098Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之SpringMVC</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BSpringMVC/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之SpringMVC/</id>
    <published>2018-09-23T08:09:32.000Z</published>
    <updated>2018-09-23T10:41:07.999Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之Maven</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BMaven/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之Maven/</id>
    <published>2018-09-23T08:09:17.000Z</published>
    <updated>2018-09-23T10:41:08.099Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之消息中间件</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之消息中间件/</id>
    <published>2018-09-23T08:09:10.000Z</published>
    <updated>2018-09-23T10:41:07.932Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之安全</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E5%AE%89%E5%85%A8/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之安全/</id>
    <published>2018-09-23T08:08:42.000Z</published>
    <updated>2018-09-23T10:40:48.389Z</updated>
    
    <content type="html"><![CDATA[<h2 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP-IP"></a>TCP-IP</h2><h3 id="什么是RST攻击"><a href="#什么是RST攻击" class="headerlink" title="什么是RST攻击"></a>什么是RST攻击</h3><p>服务器A和服务器B之间建立了TCP连接，此时服务器C伪造了一个TCP包发给B，使B异常的断开了与A之间的TCP连接，这就是RST攻击。</p><p>那么伪造什么样的TCP包可以达成目的呢？</p><p>假定C伪装成A发过去的包，这个包如果是RST包的话，毫无疑问，B将会丢弃与A的缓冲区上所有数据，强制关掉连接；<br>如果发过去的包是SYN包，B会表示A已经发疯了（与OS的实现有关），正常连接时又来建新连接，B主动向A发个RST包，并在自己这端强制关掉连接；</p><p>这两种方式都能够达到复位攻击的效果。似乎挺恐怖，然而关键是C如何能伪造成A发给B的包呢？这里有两个关键因素，源端口和序列号。</p><p>一个TCP连接都是四元组，由源IP+源端口、目标IP+目标端口唯一确定一个连接。所以，如果C要伪造A发给B的包，要在上面提到的IP头和TCP头，把源IP、源端口、目标IP、目标端口都填对。这里B作为服务器，IP和端口是公开的，A是我们要下手的目标，IP当然知道，但A的源端口就不清楚了，因为这可能是A随机生成的。当然，如果能够对常见的OS如windows和linux找出生成source port规律的话，还是可以搞定的。</p><p>此外，伪造的TCP包里需要填序列号（SeqNum），如果序列号的值不在A之前向B发送时B的滑动窗口内，B是会主动丢弃的。所以我们要找到能落到当时的AB间滑动窗口的序列号。这个可以暴力解决，因为一个sequence长度是32位，取值范围0-4294967296，如果滑动窗口大小为65535的话，则最多只需要发65537（4294967296/65535=65537）个包就能有一个序列号落到滑动窗口内。RST包是很小的，IP头＋TCP头也才40字节，算算我们的带宽就知道这实在只需要几秒钟就能搞定。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;TCP-IP&quot;&gt;&lt;a href=&quot;#TCP-IP&quot; class=&quot;headerlink&quot; title=&quot;TCP-IP&quot;&gt;&lt;/a&gt;TCP-IP&lt;/h2&gt;&lt;h3 id=&quot;什么是RST攻击&quot;&gt;&lt;a href=&quot;#什么是RST攻击&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之类与接口</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E7%B1%BB%E4%B8%8E%E6%8E%A5%E5%8F%A3/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之类与接口/</id>
    <published>2018-09-23T08:08:09.000Z</published>
    <updated>2018-09-23T10:41:07.984Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之异常</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E5%BC%82%E5%B8%B8/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之异常/</id>
    <published>2018-09-23T08:07:30.000Z</published>
    <updated>2018-09-23T10:41:07.925Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之泛型</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E6%B3%9B%E5%9E%8B/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之泛型/</id>
    <published>2018-09-23T08:07:23.000Z</published>
    <updated>2018-09-23T10:41:07.883Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之集合</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E9%9B%86%E5%90%88/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之集合/</id>
    <published>2018-09-23T08:07:18.000Z</published>
    <updated>2018-09-23T10:41:08.045Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>自创面试题之SpringBoot</title>
    <link href="http://nizouba.com/2018/09/23/%E8%87%AA%E5%88%9B%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BSpringBoot/"/>
    <id>http://nizouba.com/2018/09/23/自创面试题之SpringBoot/</id>
    <published>2018-09-23T08:06:29.000Z</published>
    <updated>2018-09-23T10:41:07.890Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://nizouba.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
</feed>
